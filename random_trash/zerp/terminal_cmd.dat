/// In the Terminal commands
/// UNIX/GNU/LINUX style command syntax

$ clear == clear screen
$ pwd == print current location in file system to screen
$ ls == list contents of current directory 
$ cd = change directory
$ cd .. == go back one directory

$ g++ nameFile.cpp == compile the code in file
$ g++ nameFile.cpp -Wall -Werror -o a.out == compile and display all warnings if any as errors
$ g++ -c main.cpp   == compile only ( & creates an object file: main.o)
$ g++ -o newName main.cpp == compile main.cpp and call that file "newName"
$ g++ -o main.cpp == compile only
$ g++ -g main.cpp == compile and can now use GDB on executable

$ ./a.out == output file named: a.out
$ touch file.cpp == if not exist make empty file na,ed "file.cpp" (see man for specifics)
$ rm main.cpp == remove main.cpp
$ mv a.out name == rename a.out "name"
$ cp file1.x file2.y == copy content of file1 into file2

$ tar -x -f name.tar.gz == extract files from tarball
$ unzip z.zip == literal

$ dpkg -l == list downloaded packages
//-------------------------------------------------------------------------------------------------

apt-get commands
???
 $ sudo apt-get -y update
 $ sudo apt-get install xyz == install xyz package

//---------------------------------------------------------------

 
 bash shortcuts
 
 $ ctrl + r == reverse lookup
 $ !"text" == reverse lookup
 
 $ ctrl + l == clear screen
 $ ctrl + c == super quit // interupt

//-----------------------------------------------------------------

/// Shell List:
$ sh == bourne shell
$ bash == bourne again shell
$ rbash // restricted ??
$ dash // similar to sh
$ tmux //??? unset using "sudo" command

/// To List Valid Login Shells
/*
first
$ cd /etc/shells
second
$ less shells == show list of available login shells
*/

//----------------------------------------------------


///GNU DEBUGGER

first compile as
$ g++ file.cpp -g
then enter
$ gdb ./a.out

///GDB syntax && commands
l
r

//--------------------------------------------
