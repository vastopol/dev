/*

SYNTAX
------
~  = undefined

() = used for separation like  (2 + (3 * 4))

application
    f:a
    where   function f applied to value a
    
composition  
    f.g
    where   (f.g):x = f:(g:x)
    
construction
    where   [1,2,3]  =  {1,2,3}
    
setting
    where  a = 4
        set element a to value 4
    where  c = [4,5,6]
        name and construct new sequence c
    where x = y
        set one unit to the other (if same type)
    
apply-to-all  @f       
    where   @f:{x1,...,xn}  =  {f:x1,...,f:xn}
    
    
condition 
    (h -> f,g)    
    where   (h -> f,g):x   
             =  f:x   if   h:x  =  T
             =  g:x   if   h:x  =  F
             =  ~    otherwise

*/


SYSTEM CALLS
///******************************************

def == the definition function

syntax: def name = value

where element
   name = atom   
   x = 3
   
OR

where sequence
   name = {atom,...,atom}   
   s = {1,2,3}
//----------------------------------------

ls == prints contents of memory stored variables

syntax: ls

//----------------------------------------

rm  == delete variable from memory

syntax: rm var


///*********************************************